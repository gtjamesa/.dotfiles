#!/bin/bash

[ -f ~/.dotfiles/shell/git/p4merge ] && source ~/.dotfiles/shell/git/p4merge

gcom() {
  if [[ -n $(git branch --list main) ]]; then
    git checkout main
  else
    git checkout master
  fi
}

# Show all commits between two branches
gbh() {
  if [ -z "$2" ]; then
    echo "Usage: gbh <branch> <branch2>"
    echo "Example: gbh main inertia"
    return 1
  fi

  git log "$1..$2" --oneline --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'
}

# Shell adaption of https://nitaym.github.io/ourstheirs/
git-ours-vs-theirs() {
  # Merge
  echo -e "\t${COLOR_LIGHT_BLUE}# git merge${COLOR_RESET}\n"
  echo -e "$ git checkout ${COLOR_YELLOW}main${COLOR_RESET}"
  echo -e "$ git merge ${COLOR_GREEN}feature${COLOR_RESET}"

  echo -ne "\nto select changes done in ${COLOR_YELLOW}main${COLOR_RESET}:\t\t"
  echo -e "$ git checkout ${COLOR_YELLOW}--ours${COLOR_RESET} codefile.js"

  echo -ne "to select changes done in ${COLOR_GREEN}feature${COLOR_RESET}:\t"
  echo -e "$ git checkout ${COLOR_GREEN}--theirs${COLOR_RESET} codefile.js"

  # Rebase
  echo -e "\n\t${COLOR_LIGHT_BLUE}# git rebase${COLOR_RESET}\n"
  echo -e "$ git checkout ${COLOR_GREEN}feature${COLOR_RESET}"
  echo -e "$ git rebase ${COLOR_YELLOW}main${COLOR_RESET}"

  echo -ne "\nto select changes done in ${COLOR_YELLOW}main${COLOR_RESET}:\t\t"
  echo -e "$ git checkout ${COLOR_YELLOW}--ours${COLOR_RESET} codefile.js"

  echo -ne "to select changes done in ${COLOR_GREEN}feature${COLOR_RESET}:\t"
  echo -e "$ git checkout ${COLOR_GREEN}--theirs${COLOR_RESET} codefile.js"
}

git-setup-p4merge() {
  git config --global diff.tool p4merge
  git config --global merge.tool p4merge
  git config --global difftool.p4merge.cmd '/mnt/c/Program\ Files/Perforce/p4merge.exe "$(wslpath -aw $LOCAL)" "$(wslpath -aw $REMOTE)"'
  git config --global mergetool.p4merge.cmd '/mnt/c/Program\ Files/Perforce/p4merge.exe "$(wslpath -aw $BASE)" "$(wslpath -aw $LOCAL)" "$(wslpath -aw $REMOTE)" "$(wslpath -aw $MERGED)"'
  git config --global mergetool.p4merge.trustexitcode false
}

# Enable gh completion
if command -v gh &>/dev/null; then
  if [ ! -f "$HOME/.oh-my-zsh/completions/_gh" ]; then
    gh completion -s zsh > "$HOME/.oh-my-zsh/completions/_gh"
  fi
fi
